{
  "uuid": "6f220bde-f001-481e-9d6a-ad9a69329ed8",
  "lastMigration": 32,
  "name": "Mock API Requests (copy)",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3001,
  "hostname": "",
  "folders": [],
  "routes": [
    {
      "uuid": "67dc2b86-243c-4c09-88f0-e927237dbee2",
      "type": "http",
      "documentation": "Register a new user",
      "method": "post",
      "endpoint": "users/register",
      "responses": [
        {
          "uuid": "accd6dc3-e3fd-4d50-88ff-c40eb8355289",
          "body": "{\n  \"message\":\"User is registered successfully.\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "New user successfully registered",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.email",
              "value": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "$.password",
              "value": "^.{6,15}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "$.email",
              "value": "admin@actualize.com",
              "invert": true,
              "operator": "equals"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": true,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "d021423a-7869-4b3d-9b33-e3e2c3140527",
          "body": "{\"message\":\"User is already registered, re-registration with same email forbidden. Please use new email address.\"}",
          "latency": 0,
          "statusCode": 403,
          "label": "Forbidden Duplicate email address",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.email",
              "value": "admin@actualize.com",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.password",
              "value": "^.{6,15}$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "f823e33f-b59b-4ec3-94fa-0565875c0726",
          "body": "{\"message\":\"User fail to register\"}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid Request not a valid email or not matching password criteria",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.email",
              "value": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "$.password",
              "value": "^.{6,15}$",
              "invert": true,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.email",
              "value": "admin@actualize.com",
              "invert": false,
              "operator": "equals"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "f4619ca5-56ca-4668-9195-66e93749ba79",
      "type": "http",
      "documentation": "Login user",
      "method": "post",
      "endpoint": "users/login",
      "responses": [
        {
          "uuid": "1a3f762d-7e01-41da-a9f3-75aaf7312123",
          "body": "{\n  \"userid\":\"{{int 1 99}}\",\n  \"access_token\": \"{{faker 'string.uuid'}}\"\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "User Successfully Login",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.email",
              "value": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "$.password",
              "value": "^.{6,15}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "$.email",
              "value": "test@actualize.com",
              "invert": true,
              "operator": "equals"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": true,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "1c74e003-365d-40bb-bd50-358ce35e3c7a",
          "body": "{\"message\":\"User not found. Please check the credentials.\"}",
          "latency": 0,
          "statusCode": 404,
          "label": "User not found",
          "headers": [
            {
              "key": "Centent-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.email",
              "value": "test@actualize.com",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "body",
              "modifier": "$.password",
              "value": "^.{6,15}$",
              "invert": false,
              "operator": "regex"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "c18d6121-1362-4cc3-b841-7cb10567d85e",
          "body": "{\"message\":\"login failed check the credentials\"}",
          "latency": 0,
          "statusCode": 400,
          "label": "Invalid Request email is wrong",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.email",
              "value": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "$.password",
              "value": "^.{6,15}$",
              "invert": true,
              "operator": "equals"
            },
            {
              "target": "header",
              "modifier": "Content-Type",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "250a226b-707c-4105-856d-2a3e19afc01c",
      "type": "http",
      "documentation": "",
      "method": "get",
      "endpoint": "books",
      "responses": [
        {
          "uuid": "b72cac92-d362-4a2b-9868-d64bd3271513",
          "body": "{\n    \"totalItems\": 1,\n    \"items\": [\n        {\n            \"id\": \"{{int 20000  99999}}\",\n            \"tag\": \"{{faker 'string.uuid'}}\",\n            \"title\": \"{{queryParam '$.items[0].title' 'Catalyst'}}\",\n            \"authors\": \"{{queryParam '$.items[0].authors' 'Chandramouli'}}\",\n            \"description\": \"Book on ultimate strategies how to win at work and home\",\n            \"genres\": [\n                \"Self help\"\n            ],\n            \"price\": \"{{int 10 1000}}\",\n            \"currency\":\"AED\",\n            \"averageRating\": 4.9,\n            \"ratingsCount\": 600\n        }\n        \n    ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Query Param search with title Catalyst",
          "headers": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer c5c65cc7-a4ab-4d90-81f1-0ee615aed21d"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Authorization",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "query",
              "modifier": "title",
              "value": "Catalyst",
              "invert": false,
              "operator": "equals"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "139551f7-a48a-4f35-bd23-1b9fecbcf3cc",
          "body": "{\n    \"totalItems\": 1,\n    \"items\": [\n        \n        {\n            \"id\": \"{{int 20000  99999}}\",\n            \"etag\": \"{{faker 'string.uuid'}}\",\n            \"title\": \"{{queryParam '$.items[0].title' 'Atomic Habits'}}\",\n            \"authors\": \"{{queryParam '$.items[0].authors' 'James Clear'}}\",\n            \"description\": \"Easy and proven way to build good habits\",\n            \"genres\": [\n                \"Non-fictional\"\n            ],\n            \"price\": \"{{int 10 1000}}\",\n            \"currency\":\"AED\"\n            \"averageRating\": 4.5,\n            \"ratingsCount\": 200\n        }\n        \n    ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "Query Parameter search with title Atomic Habits",
          "headers": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer c5c65cc7-a4ab-4d90-81f1-0ee615aed21d"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "query",
              "modifier": "title",
              "value": "Atomic Habits",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "header",
              "modifier": "Authorization",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "733f16d5-56c2-4eb5-abfe-feb063d2483a",
          "body": "{\n            \"id\": \"{{int 20000  99999}}\",\n            \"etag\": \"{{faker 'string.uuid'}}\",\n            \"title\": \"{{queryParam '$.items[0].title' 'Ikigai'}}\",\n            \"authors\": \"{{queryParam '$.items[0].authors' 'Scott'}}\",\n            \"description\": \"Japanese Art of Staying Young\",\n            \"genres\": [\n                \"Category\"\n            ],\n            \"price\": \"{{int 10 1000}}\",\n            \"currency\":\"AED\"\n            \"averageRating\": 4.8,\n            \"ratingsCount\": 200\n        }",
          "latency": 0,
          "statusCode": 200,
          "label": "Query paramemeter for searching book with Ikigai",
          "headers": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer c5c65cc7-a4ab-4d90-81f1-0ee615aed21d"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "query",
              "modifier": "title",
              "value": "Ikigai",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "header",
              "modifier": "Authorization",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "d38984f6-8ba7-44c6-83e1-180c24e192b4",
          "body": "{\n            \"id\": \"{{int 20000  99999}}\",\n            \"etag\": \"{{faker 'string.uuid'}}\",\n            \"title\": \"{{queryParam '$.items[0].title' 'Linux'}}\",\n            \"authors\": \"{{queryParam '$.items[0].authors' 'Scott'}}\",\n            \"description\": \"Learn Linux Commands\",\n            \"genres\": [\n                \"Technical\"\n            ],\n            \"price\": \"{{int 10 1000}}\",\n            \"currency\":\"AED\"\n            \"averageRating\": 4.1,s\n            \"ratingsCount\": 183\n        }",
          "latency": 0,
          "statusCode": 200,
          "label": "Query paramemeter for searching book with Linux",
          "headers": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer c5c65cc7-a4ab-4d90-81f1-0ee615aed21d"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "query",
              "modifier": "title",
              "value": "Linux",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "header",
              "modifier": "Authorization",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "e910025b-bc3e-49ec-93e2-dbb3fb1f4a19",
          "body": "{\n  \"message\": \"User unauthorized.Please login again.\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized due to authorization access token validation",
          "headers": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Authorization",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "b635b702-762b-4755-a253-8a80db7bea2e",
          "body": "{\"message\":\"Book is not available in bookstore.\"}",
          "latency": 0,
          "statusCode": 404,
          "label": "Book not available in online bookstore",
          "headers": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer c5c65cc7-a4ab-4d90-81f1-0ee615aed21d"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "query",
              "modifier": "title",
              "value": "Catalyst",
              "invert": true,
              "operator": "equals"
            },
            {
              "target": "query",
              "modifier": "title",
              "value": "Atomic Habits",
              "invert": true,
              "operator": "equals"
            },
            {
              "target": "query",
              "modifier": "title",
              "value": "Ikigai",
              "invert": true,
              "operator": "equals"
            },
            {
              "target": "query",
              "modifier": "title",
              "value": "Linux",
              "invert": true,
              "operator": "equals"
            },
            {
              "target": "header",
              "modifier": "Authorization",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "50dd28a3-510f-4123-be30-781cbf0d1c32",
      "type": "http",
      "documentation": "Add to cart",
      "method": "post",
      "endpoint": "users/:userid/cart",
      "responses": [
        {
          "uuid": "44f1c408-bc7e-4351-ac0d-6553e5d9fe8a",
          "body": "{ \n  \"cartid\":\"{{int 1 10}}\",\n  \"bookid\":\"{{int 1 999}}\",\n  \"quantity\":\"{{int 1 99}}\",\n  \"price\": \"{{int 10 999}}\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Successfully added to the cart",
          "headers": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer c5c65cc7-a4ab-4d90-81f1-0ee615aed21d"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.bookid",
              "value": "^([1-9]|[1-9][0-9]|[1-9][0-9][0-9])$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "$.quantity",
              "value": "^([1-9]|[1-9][0-9])$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "params",
              "modifier": "$.userid",
              "value": "^([1-9]|[1-9][0-9])$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "header",
              "modifier": "Authorization",
              "value": "",
              "invert": true,
              "operator": "null"
            },
            {
              "target": "body",
              "modifier": "$.bookid",
              "value": "50",
              "invert": true,
              "operator": "equals"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": true,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "86306e92-9090-4ed2-8d67-4df59741bdd5",
          "body": "{\n  \"message\":\"User is unauthorized. Please check the credentials.\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized due to authorization access token validation",
          "headers": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Authorization",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "1f08fdae-306d-4700-b9a7-6a504437bb8a",
          "body": "{\n  \"bookid\":\"{{int 1 999}}\",\n  \"message\":\"Book is out of stock.\"\n}",
          "latency": 0,
          "statusCode": 404,
          "label": "Book not found while adding to cart ",
          "headers": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer c5c65cc7-a4ab-4d90-81f1-0ee615aed21d"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.bookid",
              "value": "50",
              "invert": false,
              "operator": "equals"
            },
            {
              "target": "header",
              "modifier": "Authorization",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "b5bd6643-bb6a-4e17-8d65-36b5d9551e3e",
          "body": "{\n  \"message\":\"Bad request. Please check the ordered quantity.\"\n}",
          "latency": 0,
          "statusCode": 400,
          "label": "bad request due wrong quantity value",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer c5c65cc7-a4ab-4d90-81f1-0ee615aed21d"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.quantity",
              "value": "^(?:[1-9][0-9]{2,}|1000|[1-9][0-9]*)$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "header",
              "modifier": "Authorization",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    },
    {
      "uuid": "ee6939cd-16c6-4a9f-bef1-0f484a3cca6a",
      "type": "http",
      "documentation": "Add to cart",
      "method": "post",
      "endpoint": "users/:userid/checkout",
      "responses": [
        {
          "uuid": "c24c54f2-4ec1-464b-9f6e-566f8eb1629a",
          "body": "{ \n  \"orderid\":\"{{int 1 999}}\",\n  \"message\": \"Checkout Successful\"\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "Successfully order placed",
          "headers": [
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer c5c65cc7-a4ab-4d90-81f1-0ee615aed21d"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.cartid",
              "value": "^(10|[1-9])$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "$.paymentMethod",
              "value": "credit_card",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "body",
              "modifier": "$.paymentToken",
              "value": "^[0-9a-fA-F]{16}$",
              "invert": false,
              "operator": "regex"
            },
            {
              "target": "header",
              "modifier": "Authorization",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": true,
          "default": true,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "0d1039bd-5065-4c18-8906-d0b7ba7532bf",
          "body": "{\n  \"message\":\"unauthorized\"\n}",
          "latency": 0,
          "statusCode": 401,
          "label": "Unauthorized due to authorization access token validation",
          "headers": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "header",
              "modifier": "Authorization",
              "value": "",
              "invert": false,
              "operator": "null"
            }
          ],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        },
        {
          "uuid": "342e5c94-3032-484a-a0fc-25b44338fb53",
          "body": "{\n  \"error\":\"payment_declined\",\n  \"message\":\"Please provide the valid card information.\"\n}",
          "latency": 0,
          "statusCode": 402,
          "label": "Paymeny details are wrong",
          "headers": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Authorization",
              "value": "Bearer c5c65cc7-a4ab-4d90-81f1-0ee615aed21d"
            }
          ],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [
            {
              "target": "body",
              "modifier": "$.paymentToken",
              "value": "^[0-9a-fA-F]{16}$",
              "invert": true,
              "operator": "regex"
            },
            {
              "target": "header",
              "modifier": "Authorization",
              "value": "",
              "invert": true,
              "operator": "null"
            }
          ],
          "rulesOperator": "AND",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": false,
          "crudKey": "id",
          "callbacks": []
        }
      ],
      "responseMode": null
    }
  ],
  "rootChildren": [
    {
      "type": "route",
      "uuid": "67dc2b86-243c-4c09-88f0-e927237dbee2"
    },
    {
      "type": "route",
      "uuid": "f4619ca5-56ca-4668-9195-66e93749ba79"
    },
    {
      "type": "route",
      "uuid": "250a226b-707c-4105-856d-2a3e19afc01c"
    },
    {
      "type": "route",
      "uuid": "50dd28a3-510f-4123-be30-781cbf0d1c32"
    },
    {
      "type": "route",
      "uuid": "ee6939cd-16c6-4a9f-bef1-0f484a3cca6a"
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [
    {
      "key": "Content-Type",
      "value": "application/json"
    }
  ],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": [
    {
      "uuid": "c9ebdc78-2384-4405-bc1d-3337cf8bc5a1",
      "id": "ljl5",
      "name": "registerbody",
      "documentation": "test",
      "value": "{\n  \"user\":\"vikas\",\n  \"email\":\"vikas123@gmail.com\"\n}"
    }
  ],
  "callbacks": []
}